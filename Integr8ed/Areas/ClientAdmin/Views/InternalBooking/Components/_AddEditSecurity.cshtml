@model Integr8ed.Service.Dto.SecurityDto
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<div class="modal-content">
    <form id="frmSecurity" asp-action="AddEditSecurity" asp-controller="InternalBooking" asp-area="ClientAdmin" method="post">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLongTitle">@(Model.IsView ? "View" : "Add New") Security Details</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div class="modal-body">
            <div class="form-body">

                @Html.AntiForgeryToken()

                <div class="row">
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="IsView" />

                    <div class="col-md-6">
                        <div class="form-group input-append date form_datetime">
                            <label for="first-name-column">Date Collected *</label>
                            <div class="input-group date form_date col-md-5" data-date="DateCollected" data-date-format="dd MM yyyy" data-link-field="DateCollected" data-link-format="yyyy-mm-dd">
                                <input class="form-control" size="16" asp-for="DateCollected" autocomplete="off" name="DateCollected" id="DateCollected" type="text" placeholder="Enter Date Collected here" readonly>
                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Time Collected *</label>
                            <input type="text" class="form-control" asp-for="TimeCollected" id="TimeCollected" name="TimeCollected" placeholder="Enter Time Collected here " readonly>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group input-append date form_datetime">
                            <label for="first-name-column">Date Returned *</label>
                            <div class="input-group date form_date col-md-5" data-date="DateCollected" data-date-format="dd MM yyyy" data-link-field="DateReturned" data-link-format="dd-MM-yyyy">
                                <input class="form-control" size="16" asp-for="DateReturned" autocomplete="off" name="DateReturned" id="DateReturned" type="text" placeholder="Enter Date Returned here" readonly>
                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Time Returned *</label>
                            <input type="text" class="form-control" asp-for="TimeReturned" id="TimeReturned" name="TimeReturned" placeholder="Enter Time Returned here " readonly>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Collected By *</label>
                            <input type="text" class="form-control" asp-for="CollectedBy" id="CollectedBy" name="CollectedBy" placeholder="Enter Collected By here ">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Returned By *</label>
                            <input type="text" class="form-control" asp-for="ReturnedBy" id="ReturnedBy" name="ReturnedBy" placeholder="Enter Returned By here ">
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label id="SecurityNotes">Security Notes</label>
                            <textarea class="form-control" id="SecurityNotes" rows="3" asp-for="SecurityNotes" name="SecurityNotes" placeholder="Enter Security Notes here"></textarea>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
        </div>
    </form>
</div>

<script src="~/js/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script src="~/js/bootstrap-datetimepicker.fr.js" type="text/javascript"></script>
<script src="~/js/clockpicker.js"></script>

<script type="text/javascript">


    jQuery.validator.addMethod("nameAndno", function (value, element) {
        return this.optional(element) || /^([a-zA-Z ]*)$/i.test(value);
    }, "Please Enter a Valid Name");

    $(document).ready(function () {

          if ($("#Id").val() != 0) {
            $("#exampleModalLongTitle").html($("#exampleModalLongTitle").html().replace("Add New", "Edit"));
        }

        $("input[name=TimeCollected]").clockpicker({
            placement: 'bottom',
            align: 'left',
            autoclose: true,
            default: 'now',
            donetext: "Select"
        });


        $("input[name=TimeReturned]").clockpicker({
            placement: 'bottom',
            align: 'left',
            autoclose: true,
            default: 'now',
            donetext: "Select"
        });

        var d = new Date();
        var currMonth = d.getMonth();
        var currYear = d.getFullYear();
        var currDate = d.getDate();

        var startDate = new Date(currYear, currMonth, currDate);


        $('.form_date').datetimepicker({
            language: 'en',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            startDate: '-0m',
            format: 'dd-mm-yyyy',
            forceParse: 0,
            pickerPosition: "bottom-left"
        });
        if ($("#DateCollected").val() == "") {
            $(".form_date").datetimepicker("setDate", startDate);
        }
        if ($("#DateReturned").val() == "") {
            $(".form_date").datetimepicker("setDate", startDate);
        }


        var frmSecurity = $("#frmSecurity").validate({
            onfocusout: false,
            rules: {
                "DateCollected": {
                    required: true,
                    maxlength: 50,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },
                "DateReturned": {
                    required: true,
                    maxlength: 50,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },
                "TimeCollected": {
                    required: true,
                    maxlength: 50,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },
                "TimeReturned": {
                    required: true,
                    maxlength: 50,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },
                "CollectedBy": {
                    required: true,
                    maxlength: 50,
                    nameAndno: true,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },
                "ReturnedBy": {
                    required: true,
                    maxlength: 50,
                    nameAndno: true,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },

                "SecurityNotes": {
                    maxlength: 500,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },

            },
            messages: {
                "DateCollected": {
                    required: "Please enter a  Date Collected",
                    maxlength: "More than 50 characters are not allowed !"
                },
                "DateReturned": {
                    required: "Please enter a  Date Returned",
                    maxlength: "More than 50 characters are not allowed !"
                },
                "TimeCollected": {
                    required: "Please enter a  Time Collected",
                    maxlength: "More than 50 characters are not allowed !"
                },
                "TimeReturned": {
                    required: "Please enter a  Time Returned",
                    maxlength: "More than 50 characters are not allowed !"
                },
                "CollectedBy": {
                    required: "Please enter a  Collected By",
                    maxlength: "More than 50 characters are not allowed !"
                },
                "ReturnedBy": {
                    required: "Please enter a  Returned By",
                    maxlength: "More than 50 characters are not allowed !"
                },
                "SecurityNotes": {
                    maxlength: "More than 200 characters are not allowed !"
                },

            },
            submitHandler: function (form) {


                let post_url = form.action;
                let form_data = $(form).serialize();
                $.post(post_url, form_data, function (response) {
                    Integr8ed.HandleResponse(response);
                    if (response.status === 1) {
                        closeModal();
                        refreshDatatable("#tblNewSecurityDetail");
                        return false;
                    }
                    //window.location.href = `/ClientAdmin/MeetingType/Index`;
                });

            }
        });



        if ($("#IsView").val() == "true") {
            var allElement = $(document).find('input[type="text"],textarea,input[type="checkbox"]');
            $.each(allElement, function (key, value) {
                $(value).prop("disabled", true);
            });
            $("#btnSave").hide();

        }
        else {
            var allElement = $(document).find('input[type="text"],textarea,input[type="checkbox"]');
            $.each(allElement, function (key, value) {
                $(value).prop("disabled", false);
            });
            $("#btnSave").show();
        }

    });




</script>